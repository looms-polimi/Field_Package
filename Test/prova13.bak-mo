within Field_Package.Test;

model prova13
  parameter String sheetName = "Pr_h" "Excel sheet name" annotation(
    Evaluate = true,
    choices(choice = "set1" "First Excel sheet", choice = "set2" "Second Excel sheet"));
  inner parameter ExternData.XLSXFile dataSource(fileName = Modelica.Utilities.Files.loadResource("modelica://Field_Package/Data/precipitazioni_7giorni_test1.xlsx")) "XLSX file" annotation(
    Placement(visible = true, transformation(extent = {{-246, 396}, {-226, 416}}, rotation = 0)));
  inner Field_Package.System system annotation(
    Placement(visible = true, transformation(origin = {-190, 403}, extent = {{-12, -11}, {12, 11}}, rotation = 0)));
  Modelica.Blocks.Sources.CombiTimeTable combiTimeTable(extrapolation = Modelica.Blocks.Types.Extrapolation.HoldLastPoint, smoothness = Modelica.Blocks.Types.Smoothness.ConstantSegments, startTime = -99 * 3600, table = dataSource.getRealArray2D("H99", "Foglio1", 72, 2), timeScale = 3600) annotation(
    Placement(visible = true, transformation(origin = {-238, 360}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  inner Field_Package.Rain rain annotation(
    Placement(visible = true, transformation(origin = {-190, 358}, extent = {{-16, -16}, {16, 16}}, rotation = 0)));
  Modelica.Blocks.Sources.CombiTimeTable h_veg1(smoothness = Modelica.Blocks.Types.Smoothness.MonotoneContinuousDerivative1, table = [0, 0; 69, 0.4; 92, 0.6; 120, 1.19; 171, 1.2], timeScale = 3600 * 24) annotation(
    Placement(visible = true, transformation(origin = {-238, 322}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Sources.CombiTimeTable ET(smoothness = Modelica.Blocks.Types.Smoothness.LinearSegments, table = dataSource.getRealArray2D("M1", "Foglio1", 4105, 2), timeScale = 3600) annotation(
    Placement(visible = true, transformation(origin = {-238, 282}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  inner Field_Package.H_veg_data h_veg_data annotation(
    Placement(visible = true, transformation(origin = {-192, 320}, extent = {{-16, -16}, {16, 16}}, rotation = 0)));
  inner Field_Package.ET_data et_data annotation(
    Placement(visible = true, transformation(origin = {-191, 283}, extent = {{-15, -15}, {15, 15}}, rotation = 0)));
  Field_Package.Field.channel channel(C = 0.01, L_ch = 1000, bh = 2, z(fixed = true, start = 1)) annotation(
    Placement(visible = true, transformation(origin = {40, 302}, extent = {{-18, -18}, {18, 18}}, rotation = 0)));
  Field_Package.Field.field2_singleport field2(A = 49000, C = 0.01, z(fixed = true, start = 0.05)) annotation(
    Placement(visible = true, transformation(origin = {33, 123}, extent = {{17, -17}, {-17, 17}}, rotation = 0)));
  Field_Package.Field.field2_singleport field3(A = 60000, C = 0.01, z(fixed = true, start = 0.05)) annotation(
    Placement(visible = true, transformation(origin = {177, 131}, extent = {{17, -17}, {-17, 17}}, rotation = 0)));
  Field_Package.Sources.constant_flow_source constant_flow_source annotation(
    Placement(visible = true, transformation(origin = {-30, 306}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Sources.RealExpression realExpression3(y = 200) annotation(
    Placement(visible = true, transformation(origin = {-77, 310}, extent = {{-21, -18}, {21, 18}}, rotation = 0)));
  Field_Package.Sources.fuga fuga annotation(
    Placement(visible = true, transformation(origin = {146, 306}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Field_Package.Field.field2_singleport field1(A = 89000, C = 0.01, z(fixed = true, start = 0.05)) annotation(
    Placement(visible = true, transformation(origin = {-98, 124}, extent = {{20, -20}, {-20, 20}}, rotation = 0)));
  Field_Package.Field.field2_singleport field4(A = 132000, C = 0.01, z(fixed = true, start = 0.05)) annotation(
    Placement(visible = true, transformation(origin = {330, 130}, extent = {{20, -20}, {-20, 20}}, rotation = 0)));
  Modelica.Blocks.Sources.CombiTimeTable z_ref(smoothness = Modelica.Blocks.Types.Smoothness.ConstantSegments, table = [0, 0.05; 48, 0.05], timeScale = 3600) annotation(
    Placement(visible = true, transformation(origin = {-198, 26}, extent = {{-16, -16}, {16, 16}}, rotation = 0)));
  Modelica.Blocks.Sources.CombiTimeTable combiTimeTable1(extrapolation = Modelica.Blocks.Types.Extrapolation.HoldLastPoint, smoothness = Modelica.Blocks.Types.Smoothness.ConstantSegments, table = dataSource.getRealArray2D("H1", "Foglio1", 4105, 2), timeScale = 3600) annotation(
    Placement(visible = true, transformation(origin = {-106, 408}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Field_Package.Valves.valve_portabattente3 valve_1(r = 0.22)  annotation(
    Placement(visible = true, transformation(origin = {-158, 170}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Continuous.LimPID PI1(Ti = system.rho / field1.C,controllerType = Modelica.Blocks.Types.SimpleController.PI, k = system.rho * field1.A * 5 / (4 * 3600 * valve_1.Cc * valve_1.Av_max * sqrt(2 * system.g) * sqrt(1 - 0.05)), yMax = 1, yMin = 0)  annotation(
    Placement(visible = true, transformation(origin = {-72, 220}, extent = {{10, -10}, {-10, 10}}, rotation = 0)));
  Modelica.Blocks.Continuous.LimPID PI2(Ti = system.rho / field2.C, controllerType = Modelica.Blocks.Types.SimpleController.PI, k = system.rho * field2.A * 5 / (4 * 3600 * valve_2.Cc * valve_2.Av_max * sqrt(2 * system.g) * sqrt(1 - 0.05)), yMax = 1, yMin = 0) annotation(
    Placement(visible = true, transformation(origin = {46, 222}, extent = {{10, -10}, {-10, 10}}, rotation = 0)));
  Field_Package.Valves.valve_portabattente3 valve_2(r = 0.22)  annotation(
    Placement(visible = true, transformation(origin = {-6, 166}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Field_Package.Valves.valve_portabattente3 valve_3(r = 0.22) annotation(
    Placement(visible = true, transformation(origin = {128, 170}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Continuous.LimPID PI3(Ti = system.rho / field3.C, controllerType = Modelica.Blocks.Types.SimpleController.PI, k = system.rho * field3.A * 5 / (4 * 3600 * valve_3.Cc * valve_3.Av_max * sqrt(2 * system.g) * sqrt(1 - 0.05)), yMax = 1, yMin = 0) annotation(
    Placement(visible = true, transformation(origin = {158, 218}, extent = {{10, -10}, {-10, 10}}, rotation = 0)));
  Field_Package.Valves.valve_portabattente3 valve_4(r = 0.22) annotation(
    Placement(visible = true, transformation(origin = {266, 176}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Continuous.LimPID PI4(Ti = system.rho / field4.C, controllerType = Modelica.Blocks.Types.SimpleController.PI, k = system.rho * field4.A * 5 / (4 * 3600 * valve_4.Cc * valve_4.Av_max * sqrt(2 * system.g) * sqrt(1 - 0.05)), yMax = 1, yMin = 0) annotation(
    Placement(visible = true, transformation(origin = {352, 218}, extent = {{10, -10}, {-10, 10}}, rotation = 0)));
  Field_Package.Valves.valve_stramazzo valve_stramazzo(L = 1, height_port_a = 1.2, height_port_b = 1.2)  annotation(
    Placement(visible = true, transformation(origin = {102, 304}, extent = {{-18, -18}, {18, 18}}, rotation = 0)));
equation
  connect(combiTimeTable.y[1], rain.R) annotation(
    Line(points = {{-227, 360}, {-217.5, 360}, {-217.5, 361}, {-203, 361}}, color = {0, 0, 127}));
  connect(h_veg1.y[1], h_veg_data.h) annotation(
    Line(points = {{-227, 322}, {-216, 322}, {-216, 323}, {-205, 323}}, color = {0, 0, 127}));
  connect(ET.y[1], et_data.ET) annotation(
    Line(points = {{-227, 282}, {-216.5, 282}, {-216.5, 283}, {-204, 283}}, color = {0, 0, 127}));
  connect(constant_flow_source.a, channel.Port) annotation(
    Line(points = {{-19, 306}, {5.5, 306}, {5.5, 265}, {40.25, 265}, {40.25, 285}, {39, 285}}));
  connect(realExpression3.y, constant_flow_source.k) annotation(
    Line(points = {{-54, 310}, {-50.5, 310}, {-50.5, 315}, {-39, 315}}, color = {0, 0, 127}));
  connect(valve_1.b_batt, field1.Port) annotation(
    Line(points = {{-148, 166}, {-122, 166}, {-122, 100}, {-98, 100}, {-98, 104}}));
  connect(valve_1.a_batt, channel.Port) annotation(
    Line(points = {{-168, 166}, {-180, 166}, {-180, 246}, {39, 246}, {39, 285}}));
  connect(PI1.y, valve_1.x) annotation(
    Line(points = {{-83, 220}, {-158, 220}, {-158, 178}}, color = {0, 0, 127}));
  connect(z_ref.y[1], PI1.u_s) annotation(
    Line(points = {{-180, 26}, {-28, 26}, {-28, 146}, {-60, 146}, {-60, 220}}, color = {0, 0, 127}));
  connect(field1.y, PI1.u_m) annotation(
    Line(points = {{-76, 120}, {-72, 120}, {-72, 208}}, color = {0, 0, 127}));
  connect(valve_2.a_batt, channel.Port) annotation(
    Line(points = {{-16, 161}, {-32, 161}, {-32, 246}, {39, 246}, {39, 285}}));
  connect(valve_2.b_batt, field2.Port) annotation(
    Line(points = {{4, 161}, {10, 161}, {10, 102}, {32, 102}, {32, 106}}));
  connect(PI2.y, valve_2.x) annotation(
    Line(points = {{35, 222}, {-6, 222}, {-6, 175}}, color = {0, 0, 127}));
  connect(field2.y, PI2.u_m) annotation(
    Line(points = {{50, 120}, {58, 120}, {58, 210}, {46, 210}}, color = {0, 0, 127}));
  connect(PI2.u_s, z_ref.y[1]) annotation(
    Line(points = {{58, 222}, {84, 222}, {84, 26}, {-180, 26}}, color = {0, 0, 127}));
  connect(valve_3.a_batt, channel.Port) annotation(
    Line(points = {{118, 166}, {114, 166}, {114, 246}, {39, 246}, {39, 285}}));
  connect(valve_3.b_batt, field3.Port) annotation(
    Line(points = {{138, 166}, {154, 166}, {154, 110}, {176, 110}, {176, 114}}));
  connect(PI3.y, valve_3.x) annotation(
    Line(points = {{148, 218}, {128, 218}, {128, 178}}, color = {0, 0, 127}));
  connect(PI3.u_m, field3.y) annotation(
    Line(points = {{158, 206}, {194, 206}, {194, 128}}, color = {0, 0, 127}));
  connect(PI3.u_s, z_ref.y[1]) annotation(
    Line(points = {{170, 218}, {226, 218}, {226, 26}, {-180, 26}}, color = {0, 0, 127}));
  connect(valve_4.a_batt, channel.Port) annotation(
    Line(points = {{256, 172}, {244, 172}, {244, 246}, {39, 246}, {39, 285}}));
  connect(valve_4.b_batt, field4.Port) annotation(
    Line(points = {{276, 172}, {308, 172}, {308, 106}, {330, 106}, {330, 110}}));
  connect(PI4.y, valve_4.x) annotation(
    Line(points = {{341, 218}, {266, 218}, {266, 184}}, color = {0, 0, 127}));
  connect(PI4.u_m, field4.y) annotation(
    Line(points = {{352, 206}, {360, 206}, {360, 126}, {352, 126}}, color = {0, 0, 127}));
  connect(PI4.u_s, z_ref.y[1]) annotation(
    Line(points = {{364, 218}, {376, 218}, {376, 26}, {-180, 26}}, color = {0, 0, 127}));
  connect(valve_stramazzo.a_stram, channel.Port) annotation(
    Line(points = {{86, 304}, {68, 304}, {68, 264}, {40, 264}, {40, 284}}));
  connect(valve_stramazzo.b_stram, fuga.a) annotation(
    Line(points = {{118, 304}, {136, 304}, {136, 306}}));
protected
  annotation(
    Documentation(info = "<html>
<p>
Test con <strong> 5 </strong> appezzamenti di cui 1 è collegato con un rialzamento del canale. Irrigati tutti con un riferimento di livello d'acqua ottimale ricavato dalla presentazione. 
Controllori PI con azione anti-windup. 


</p>
</html>"),
    Diagram(coordinateSystem(extent = {{-280, 440}, {620, -20}}), graphics = {Rectangle(origin = {-68, 313}, lineColor = {255, 255, 0}, fillColor = {251, 255, 170}, fillPattern = FillPattern.Solid, extent = {{-66, 35}, {66, -35}}), Text(origin = {-107, 286}, extent = {{-21, 2}, {21, -2}}, textString = "source"), Rectangle(origin = {133, 308}, lineColor = {255, 255, 0}, fillColor = {251, 255, 170}, fillPattern = FillPattern.Solid, extent = {{-59, 36}, {59, -36}}), Rectangle(origin = {-222, 348}, lineColor = {189, 255, 202}, fillColor = {230, 255, 232}, fillPattern = FillPattern.Solid, extent = {{52, 88}, {-52, -88}}), Rectangle(origin = {-200, 24}, lineColor = {255, 158, 158}, fillColor = {255, 219, 221}, fillPattern = FillPattern.Solid, extent = {{-54, 38}, {54, -38}}), Text(origin = {-196, -5}, extent = {{-68, 1}, {68, -1}}, textString = "riferimento livello acqua"), Text(origin = {4, 406}, extent = {{-134, 6}, {134, -6}}, textString = "timetable di tutta la stagione"), Text(origin = {-336, 362}, extent = {{-134, 6}, {134, -6}}, textString = "timetable di test")}),
    experiment(StartTime = 0, StopTime = 311000, Tolerance = 1e-06, Interval = 180));
end prova13;
